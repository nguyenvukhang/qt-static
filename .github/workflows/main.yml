name: release

on:
  push:
    branches:
      - dev
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+**"

permissions:
  contents: write

env:
  QT_OUTPUT_DIR: qt_output
  QT_SRC_DIR: qt_src
  QT_CFG_ARGS: -opensource -release -static -nomake examples -nomake tests -skip qt3d -skip qttranslations -skip qt5compat -skip qtactiveqt -skip qtcharts -skip qtcoap -skip qtconnectivity -skip qtdatavis3d -skip qtdeclarative -skip qtdoc -skip qthttpserver -skip qtlanguageserver -skip qtlottie -skip qtmqtt -skip qtmultimedia -skip qtnetworkauth -skip qtopcua -skip qtpositioning -skip qtquick3d -skip qtquick3dphysics -skip qtquicktimeline -skip qtremoteobjects -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtshadertools -skip qtspeech -skip qtsvg -skip qttools -skip qtwebsockets

jobs:
  build-win64:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]
        version: [6.2.0]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install MSVC 2022
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - run: choco install ninja

      - name: Set environment variables
        shell: bash
        run: |
          echo "QT_SRC_DIR=$PWD/${{ env.QT_SRC_DIR }}">>$GITHUB_ENV
          echo "QT_OUTPUT_DIR=$PWD/${{ env.QT_OUTPUT_DIR }}">>$GITHUB_ENV
          echo "ASSET=qt-${{ matrix.version }}-${{ matrix.os }}.tar.gz">>$GITHUB_ENV
          echo 'C:/ProgramData/Chocolatey/bin' >>$GITHUB_PATH
          echo 'C:/Strawberry/perl/bin' >>$GITHUB_PATH
          echo 'C:/hostedtoolcache/windows/Ruby/2.5.9/x64/bin' >>$GITHUB_PATH
          echo 'C:/hostedtoolcache/windows/Python/3.7.9/x64/bin' >>$GITHUB_PATH
          echo 'C:/Program Files/CMake/bin' >>$GITHUB_PATH
          echo 'C:/ProgramData/chocolatey/lib/zstandard/tools' >>$GITHUB_PATH

      - name: Clone from source
        run: git clone https://code.qt.io/qt/qt5.git -b v${{ matrix.version }} qt_src

      - name: Initialize source
        run: cd qt_src && perl init-repository --module-subset=qtbase

      - name: Configure
        run: |
          cd qt_src
          ./configure -no-opengl -prefix qt_output ${{ env.QT_CFG_ARGS }} -platform win32-msvc -- -DCMAKE_SYSTEM_NAME=Generic

      - name: Build
        run: |
          cd qt_src
          ninja -j6 && ninja install

      - name: Compress for shipping
        run: cd qt_output && tar -zcvf ${{ env.ASSET }} *

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ASSET }}
          generate_release_notes: true
